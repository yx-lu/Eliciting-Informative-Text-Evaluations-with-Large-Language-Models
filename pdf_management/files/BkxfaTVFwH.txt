Title:
```
Published as a conference paper at ICLR 2020 GENESIS: GENERATIVE SCENE INFERENCE AND SAMPLING WITH OBJECT-CENTRIC LATENT REPRESENTATIONS
```
Abstract:
```
Generative latent-variable models are emerging as promising tools in robotics and reinforcement learning. Yet, even though tasks in these domains typically involve distinct objects, most state-of-the-art generative models do not explicitly capture the compositional nature of visual scenes. Two recent exceptions, MONet and IODINE, decompose scenes into objects in an unsupervised fashion. Their under- lying generative processes, however, do not account for component interactions. Hence, neither of them allows for principled sampling of novel scenes. Here we present GENESIS, the first object-centric generative model of rendered 3D scenes capable of both decomposing and generating scenes by capturing relationships between scene components. GENESIS parameterises a spatial GMM over images which is decoded from a set of object-centric latent variables that are either in- ferred sequentially in an amortised fashion or sampled from an autoregressive prior. We train GENESIS on several publicly available datasets and evaluate its performance on scene generation, decomposition, and semi-supervised learning.
```

Figures/Tables Captions:
```
Figure 1: GENESIS illustration. Given an image x, an encoder and an RNN compute the mask latents z m k . These are decoded to obtain the mixing probabilities π k . The image and individual masks are concatenated to infer the component latents z c k from which the scene components x k are decoded.
Figure 2: Graphical model of GENESIS compared to related methods. N denotes the number of refinement iterations in IODINE. Unlike the other methods, both GENESIS variants explicitly model dependencies between scene components.
Figure 3: Component-by-component scene generation with GENESIS and MONet after training on the GQN dataset. The first pane shows the final scene and the subsequent panes show the components generated at each step. GENESIS first generates the sky and the floor, followed by individual objects, and finally distinct parts of the wall in the background to compose a coherent scene. MONet, in contrast, only generates incomplete components that do not fit together.
Figure 4: Step-by-step decomposition of the same scene from GQN with GENESIS and MONet. Unlike MONet, GENESIS clearly differentiates individual objects in the first example. In the second example, GENESIS captures the fine-grained pattern of the wall in the background better than MONet.
Table 1: Classification accuracy in % on the test sets of the ShapeStacks tasks.
Table 2: Fréchet Inception Distances for GENESIS and baselines on GQN.
```

Main Content:
```

Section Title: INTRODUCTION
  INTRODUCTION Task execution in robotics and reinforcement learning (RL) requires accurate perception of and rea- soning about discrete elements in an environment. While supervised methods can be used to identify pertinent objects, it is intractable to collect labels for every scenario and task. Discovering structure in data-such as objects-and learning to represent data in a compact fashion without supervision are long-standing problems in machine learning ( Comon, 1992 ;  Tishby et al., 2000 ), often formu- lated as generative latent-variable modelling (e.g.  Kingma & Welling, 2014 ;  Rezende et al., 2014 ). Such methods have been leveraged to increase sample efficiency in RL ( Gregor et al., 2019 ) and other supervised tasks ( van Steenkiste et al., 2019 ). They also offer the ability to imagine environments for training ( Ha & Schmidhuber, 2018 ). Given the compositional nature of visual scenes, sepa- rating latent representations into object-centric ones can facilitate fast and robust learning (Watters et al., 2019a), while also being amenable to relational reasoning ( Santoro et al., 2017 ). Interestingly, however, state-of-the-art methods for generating realistic images do not account for this discrete structure ( Brock et al., 2018 ;  Parmar et al., 2018 ). As in the approach proposed in this work, human visual perception is not passive. Rather it involves a creative interplay between external stimulation and an active, internal generative model of the world ( Rao & Ballard, 1999 ;  Friston, 2005 ). That this is necessary can be seen from the physiology of the eye, where the small portion of the visual field that can produce sharp images (fovea centralis) motivates the need for rapid eye movements (saccades) to build up a crisp and holistic percept of a scene ( Wandell, 1995 ). In other words, what we perceive is largely a mental simulation of the external world. Meanwhile, work in computational neuroscience tells us that visual features (see, e.g.,  Hubel & Wiesel, 1968 ) can be inferred from the statistics of static images using unsupervised learning ( Olshausen & Field, 1996 ). Experimental investigations further show that specific brain areas (e.g. LO) appear specialised for objects, for example responding more strongly to common objects than to scenes or textures, while responding only weakly to movement (cf. MT) (e.g.,  Grill- Spector & Malach, 2004 ).

Section Title: Published as a conference paper at ICLR 2020
  Published as a conference paper at ICLR 2020 In this work, we are interested in probabilistic generative models that can explain visual scenes compositionally via several latent variables. This corresponds to fitting a probability distribution p θ (x) with parameters θ to the data. The compositional structure is captured by K latent variables so that p θ (x) = p θ (x | z 1:K )p θ (z 1:K ) dz 1:K . Models from this family can be optimised using the variational auto-encoder (VAE) framework ( Kingma & Welling, 2014 ;  Rezende et al., 2014 ), by maximising a variational lower bound on the model evidence ( Jordan et al., 1999 ). Burgess et al. (2019) and  Greff et al. (2019)  recently proposed two such models, MONet and IODINE, to decom- pose visual scenes into meaningful objects. Both works leverage an analysis-by-synthesis approach through the machinery of VAEs ( Kingma & Welling, 2014 ;  Rezende et al., 2014 ) to train these mod- els without labelled supervision, e.g. in the form of ground truth segmentation masks. However, the models have a factorised prior that treats scene components as independent. Thus, neither provides an object-centric generation mechanism that accounts for relationships between constituent parts of a scene, e.g. two physical objects cannot occupy the same location, prohibiting the component-wise generation of novel scenes and restricting the utility of these approaches. Moreover, MONet embeds a convolutional neural network (CNN) inside of an recurrent neural network (RNN) that is unrolled for each scene component, which does not scale well to more complex scenes. Similarly, IODINE utilises a CNN within an expensive, gradient-based iterative refinement mechanism. Therefore, we introduce GENErative Scene Inference and Sampling (GENESIS) which is, to the best of our knowledge, the first object-centric generative model of rendered 3D scenes capable of both de- composing and generating scenes 1 . Compared to previous work, this renders GENESIS significantly more suitable for a wide range of applications in robotics and reinforcement learning. GENESIS achieves this by modelling relationships between scene components with an expressive, autoregres- sive prior that is learned alongside a sequential, amortised inference network. Importantly, sequen- tial inference is performed in low-dimensional latent space, allowing all convolutional encoders and decoders to be run in parallel to fully exploit modern graphics processing hardware. We conduct experiments on three canonical and publicly available datasets: coloured Multi-dSprites (Burgess et al., 2019), the GQN dataset ( Eslami et al., 2018 ), and ShapeStacks ( Groth et al., 2018 ). The latter two are simulated 3D environments which serve as testing grounds for navigation and object manipulation tasks, respectively. We show both qualitatively and quantitatively that in con- trast to prior art, GENESIS is able to generate coherent scenes while also performing well on scene decomposition. Furthermore, we use the scene annotations available for ShapeStacks to show the benefit of utilising general purpose, object-centric latent representations from GENESIS for tasks such as predicting whether a block tower is stable or not. Code and models are available at https://github.com/applied-ai-lab/genesis.

Section Title: RELATED WORK
  RELATED WORK

Section Title: Structured Models
  Structured Models Several methods leverage structured latent variables to discover objects in im- ages without direct supervision. CST-VAE ( Huang & Murphy, 2015 ), AIR ( Eslami et al., 2016 ), SQAIR ( Kosiorek et al., 2018 ), and SPAIR ( Crawford & Pineau, 2019 ) use spatial attention to par- tition scenes into objects. TAGGER ( Greff et al., 2016 ), NEM ( Greff et al., 2017 ), and R-NEM ( van Steenkiste et al., 2018a ) perform unsupervised segmentation by modelling images as spatial mixture models. SCAE ( Kosiorek et al., 2019 ) discovers geometric relationships between objects and their parts by using an affine-aware decoder. Yet, these approaches have not been shown to work on more complex images, for example visual scenes with 3D spatial structure, occlusion, perspective distor- tion, and multiple foreground and background components as considered in this work. Moreover, none of them demonstrate the ability to generate novel scenes with relational structure. While  Xu et al. (2018)  present an extension of  Eslami et al. (2016)  to generate images, their method only works on binary images with a uniform black background and assumes that object bounding boxes do not overlap. In contrast, we train GENESIS on rendered 3D scenes from  Eslami et al. (2018)  and  Groth et al. (2018)  which feature complex backgrounds and considerable occlusion to perform both decomposition and generation. Lastly,  Xu et al. (2019)  use ground truth pixel-wise flow fields as a cue for segmenting objects or object parts. Similarly, GENESIS could be adapted to also leverage temporal information which is a promising avenue for future research. MONet & IODINE While this work is most directly related to MONet (Burgess et al., 2019) and IODINE ( Greff et al., 2019 ), it sets itself apart by introducing a generative model that captures rela- tions between scene components with an autoregressive prior, enabling the unconditional generation of coherent, novel scenes. Moreover, MONet relies on a deterministic attention mechanism rather than utilising a proper probabilistic inference procedure. This implies that the training objective is not a valid lower bound on the marginal likelihood and that the model cannot perform density estimation without modification. Furthermore, this attention mechanism embeds a CNN in a RNN, posing an issue in terms of scalability. These two considerations do not apply to IODINE, but IODINE employs a gradient-based, iterative refinement mechanism which expensive both in terms of com- putation and memory, limiting its practicality and utility. Architecturally, GENESIS is more similar to MONet and does not require expensive iterative refinement as IODINE. Unlike MONet, though, the convolutional encoders and decoders in GENESIS can be run in parallel, rendering the model computationally more scalable to inputs with a larger number of scene components.

Section Title: Adversarial Methods
  Adversarial Methods A few recent works have proposed to use an adversary for scene segmenta- tion and generation.  Chen et al. (2019)  and  Bielski & Favaro (2019)  segment a single foreground object per image and Arandjelović & Zisserman (2019) segment several synthetic objects superim- posed on natural images.  Azadi et al. (2019)  combine two objects or an object and a background scene in a sensible fashion and  van Steenkiste et al. (2018b)  can generate scenes with a potentially arbitrary number of components. In comparison, GENESIS performs both inference and generation, does not exhibit the instabilities of adversarial training, and offers a probabilistic formulation which captures uncertainty, e.g. during scene decomposition. Furthermore, the complexity of GENESIS increases with O(K), where K is the number of components, as opposed to the O(K 2 ) complexity of the relational stage in  van Steenkiste et al. (2018b) . Inverse Graphics A range of works formulate scene understanding as an inverse graphics problem. These well-engineered methods, however, rely on scene annotations for training and lack probabilis- tic formulations. For example,  Wu et al. (2017b)  leverage a graphics renderer to decode a structured scene description which is inferred by a neural network.  Romaszko et al. (2017)  pursue a similar approach but instead make use of a differentiable graphics render.  Wu et al. (2017a)  further employ different physics engines to predict the movement of billiard balls and block towers.

Section Title: GENESIS: GENERATIVE SCENE INFERENCE AND SAMPLING
  GENESIS: GENERATIVE SCENE INFERENCE AND SAMPLING In this section, we first describe the generative model of GENESIS and a simplified variant called GENESIS-S. This is followed by the associated inference procedures and two possible learning objectives. GENESIS is illustrated in  Figure 1  and  Figure 2  shows the graphical model in comparison to alternative methods. An illustration of GENESIS-S is included Appendix B.1, Figure 5. Generative model Let x ∈ R H×W ×C be an image. We formulate the problem of image genera- tion as a spatial Gaussian mixture model (GMM). That is, every Gaussian component k = 1, . . . , K represents an image-sized scene component x k ∈ R H×W ×C . K ∈ N + is the maximum number of scene components. The corresponding mixing probabilities π k ∈ [0, 1] H×W indicate whether the component is present at a location in the image. The mixing probabilities are normalised across scene components, i.e. ∀ i,j k π i,j,k = 1, and can be regarded as spatial attention masks. Since there are strong spatial dependencies between components, we formulate an autoregressive prior distribution over mask variables z m k ∈ R Dm which encode the mixing probabilities π k , as The dependence on previous latents z m 1:k−1 is implemented via an RNN R θ with hidden state u k . Next, we assume that the scene components x k are conditionally independent given their spatial allo- cation in the scene. The corresponding conditional distribution over component variables z c k ∈ R Dc which encode the scene components x k factorises as follows, Now, the image likelihood is given by a mixture model, where the mixing probabilities π k = π θ (z m 1:k ) are created via a stick-breaking process (SBP) adapted from Burgess et al. (2019) as follows, slightly overloading the π notation, Note that this step is not necessary for our model and instead one could use a softmax to normalise masks as in  Greff et al. (2019) . Finally, omitting subscripts, the full generative model can be written as where we assume that all conditional distributions are Gaussian. The Gaussian components of the image likelihood have a fixed scalar standard deviation σ 2 x . We refer to this model as GENESIS. To investigate whether separate latents for masks and component appearances are necessary for decom- position, we consider a simplified model, GENESIS-S, with a single latent variable per component, In this case, z k takes the role of z c k in Equation (3) and of z m k in Equation (4), while Equation (2) is no longer necessary.

Section Title: Approximate posterior
  Approximate posterior We amortise inference by using an approximate posterior distribution with parameters φ and a structure similar to the generative model. The full approximate posterior reads as follows, Learning GENESIS can be trained by maximising the evidence lower bound (ELBO) on the log- marginal likelihood log p θ (x), given by However, this often leads to a strong emphasis on the likelihood term, while allowing the marginal approximate posterior q φ (z) = E pdata(x) [q φ (z | x)] to drift away from the prior distribution, hence increasing the KL-divergence. This also decreases the quality of samples drawn from the model. To prevent this behaviour, we use the Generalised ELBO with Constrained Optimisation (GECO) objective from  Rezende & Viola (2018)  instead, which changes the learning problem to minimising the KL-divergence subject to a reconstruction constraint. Let C ∈ R be the minimum allowed reconstruction log-likelihood, GECO then uses Lagrange multipliers to solve the following problem, θ , φ = arg min

Section Title: EXPERIMENTS
  EXPERIMENTS In this section, we present qualitative and quantitative results on coloured Multi-dSprites (Burgess et al., 2019), the "rooms-ring-camera" dataset from GQN ( Eslami et al., 2018 ) and the ShapeStacks dataset ( Groth et al., 2018 ). We use an image resolution of 64-by-64 for all experiments. The number of components is set to K = 5, K = 7, and K = 9 for Multi-dSprites, GQN, and ShapeStacks, respectively. More details about the datasets are provided in Appendix A. Implementation and training details of all models are described in Appendix B.

Section Title: COMPONENT-WISE SCENE GENERATION
  COMPONENT-WISE SCENE GENERATION Unlike previous works, GENESIS has an autoregressive prior to capture intricate dependencies be- tween scene components. Modelling these relationships is necessary to generate coherent scenes. For example, different parts of the background need to fit together; we do not want to create com- ponents such as the sky several times; and several physical objects cannot be in the same location. GENESIS is able to generate novel scenes by sequentially sampling scene components from the prior and conditioning each new component on those that have been generated during previous steps. After training GENESIS and MONet on the GQN dataset,  Figure 3  shows the component-by- component generation process of novel scenes, corresponding to drawing samples from the respec- tive prior distributions. More examples of generated scenes are shown in Figure 6, Appendix D. With GENESIS, either an object in the foreground or a part of the background is generated at every step and these components fit together to make up a semantically consistent scene that looks sim- ilar to the training data. MONet, though, generates random artefacts at every step that do not form a sensible scene. These results are striking but not surprising: MONet was not designed for scene generation. The need for such a model is why we developed GENESIS. Notably, GENESIS pursues a consistent strategy for scene generation: Step one generates the floor and the sky, defining the layout of the scene. Steps two to four generate individual foreground objects. Some of these slots remain empty if less than three objects are present in the scene. The final three steps generate the walls in the background. We conjecture that this strategy evolves during training as the floor and sky constitute large and easy to model surfaces that have a strong impact on the reconstruction loss. Finally, we observe that some slots contain artefacts of the sky at the top of the wall boundaries. We conjecture this is due to the fact that the mask decoder does not have skip connections as typically used in segmentation networks, making it difficult for the model to predict sharp segmentation boundaries. Scenes generated by GENESIS-S are shown in Figure 8 and Figure 9, Appendix D. While GENESIS-S does separate the foreground objects from the background, it generates them in one step and the individual background components are not very interpretable.

Section Title: INFERENCE OF SCENE COMPONENTS
  INFERENCE OF SCENE COMPONENTS Like MONet and IODINE, which were designed for unsupervised scene decomposition, GENESIS is also able to segment scenes into meaningful components.  Figure 4  compares the decomposition of two images from the GQN dataset with GENESIS and MONet. Both models follow a similar decomposition strategy, but MONet fails to disambiguate one foreground object in the first example and does not reconstruct the background in as much detail in the second example. In Appendix E, Figure 10 illustrates the ability of both methods to disambiguate objects of the same colour and Figure 11 shows scene decomposition with GENESIS-S. Following  Greff et al. (2019) , we quantify segmentation performance with the Adjusted Rand Index (ARI) of pixels overlapping with ground truth foreground objects. We computed the ARI on 300 random images from the ShapeStacks test set for five models trained with different random seeds. GENESIS achieves an ARI of 0.73 ± 0.03 which is better than 0.63 ± 0.07 for MONet. This metric, however, does not penalise objects being over-segmented, which can give a misleading impression with regards to segmentation quality. This is illustrated in Figure 13, Appendix E. Inspired by  Arbelaez et al. (2010) , we thus propose to use the segmentation covering (SC) of the ground truth foreground objects by the predicted masks. This involves taking a weighted mean over mask pairs, putting a potentially undesirable emphasis on larger objects. We therefore also consider taking an unweighted mean (mSC). For the same 300 images from the ShapeStacks test set and five different random seeds, GENESIS (SC: 0.64 ± 0.08, mSC: 0.60 ± 0.09) again outperforms MONet (SC: 0.52 ± 0.09, mSC: 0.49 ± 0.09). More details are provided in Appendix C.

Section Title: EVALUATION OF UNSUPERVISED REPRESENTATION UTILITY
  EVALUATION OF UNSUPERVISED REPRESENTATION UTILITY Using a subset of the available labelled training images from ShapeStacks, we train a set of clas- sifiers on the representations learned by GENESIS and several baselines to evaluate how well these representations capture the ground truth scene state. In particular, we consider three tasks: (1) Is a tower stable or not? (2) What is the tower's height in terms of the number of blocks? (3) What is the camera viewpoint (out of 16 possibilities)? Tower stability is a particularly interesting prop- erty as it depends on in fine-grained object information and the relative positioning of objects. We selected the third task as learning scene representations from different views has previously been prominently explored in  Eslami et al. (2018) . We compare GENESIS and GENESIS-S against three baselines: MONet, a VAE with a spatial broadcast decoder (BD-VAE) and a VAE with a deconvo- lutional decoder (DC-VAE). The results are summarised in  Table 1 . The architectural details of the baselines are described in Appendix B.2 and Appendix B.3. The implementation details of the classifiers are provided in Appendix B.5. Both GENESIS and GENESIS-S perform better than than the baselines at predicting tower stability and their accuracies on predicting the height of the towers is only outperformed by MONet. We conjecture that MONet benefits here by its deterministic segmentation network. Overall, this cor- roborates the intuition that object-centric representations are indeed beneficial for these tasks which focus on the foreground objects. We observe that the BD-VAE does better than the DC-VAE on all three tasks, reflecting the motivation behind its design which is aimed at better disentangling the un- derlying factors of variation in the data (Watters et al., 2019b). All models achieve a high accuracy at predicting the camera view. Finally, we note that none of models reach the stability prediction accu- racies reported in  Groth et al. (2018)  which were obtained with an Inception-v4 classifier ( Szegedy et al., 2017 ). This is not surprising considering that only a subset the training images is used for training the classifiers without data augmentation and at a reduced resolution.

Section Title: QUANTIFYING SAMPLE QUALITY
  QUANTIFYING SAMPLE QUALITY In order to quantify the quality of generated scenes,  Table 2  summarises the Fréchet Inception Dis- tances (FIDs) ( Heusel et al., 2017 ) between 10,000 images generated by GENESIS as well several baselines and 10,000 images from the Multi-dSprites and the GQN test sets, respectively. The two GENESIS variants achieve the best FID on both datasets. While GENESIS-S performs better than GENESIS on GQN, Figure 8 and Figure 9 in Appendix D show that individual scene components are less interpretable and that intricate background patterns are generated at the expense of sensible foreground objects. It is not surprising that the FIDs for MONet are relatively large given that it was not designed for generating scenes. Interestingly, the DC-VAE achieves a smaller FID on GQN than the BD-VAE. This is surprising given that the BD-VAE representations are more useful for the ShapeStacks classification tasks. Given that the GQN dataset and ShapeStacks are somewhat simi- lar in structure and appearance, this indicates that while FID correlates with perceptual similarity, it does not necessarily correlate with the general utility of the learned representations for downstream tasks. We include scenes sampled from the BD-VAE and the DC-VAE in Figure 7, Appendix D, where we observe that the DC-VAE models the background fairly well while foreground objects are blurry.

Section Title: CONCLUSIONS
  CONCLUSIONS In this work, we propose a novel object-centric latent variable model of scenes called GENESIS. We show that GENESIS is, to the best of our knowledge, the first unsupervised model to both decompose rendered 3D scenes into semantically meaningful constituent parts, while at the same time being able to generate coherent scenes in a component-wise fashion. This is achieved by capturing relationships between scene components with an autoregressive prior that is learned alongside a computationally efficient sequential inference network, setting GENESIS apart from prior art. Regarding future work, an interesting challenge is to scale GENESIS to more complex datasets and to employ the model in robotics or reinforcement learning applications. To this end, it will be necessary to improve reconstruction and sample quality, reduce computational cost, and to scale the model to higher resolution images. Another potentially promising research direction is to adapt the formulation to only model parts of the scene that are relevant for a certain task.
  We use the terms "object" and "scene component" synonymously in this work.

```
