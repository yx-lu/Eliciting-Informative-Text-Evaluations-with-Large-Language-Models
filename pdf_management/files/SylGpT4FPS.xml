<article article-type="research-article"><front><article-meta><title-group><article-title>Under review as a conference paper at ICLR 2020 LAST-ITERATE CONVERGENCE RATES FOR MIN-MAX OPTIMIZATION</article-title></title-group><abstract><p>While classic work in convex-concave min-max optimization relies on average- iterate convergence results, the emergence of nonconvex applications such as training Generative Adversarial Networks has led to renewed interest in last-iterate convergence guarantees. Proving last-iterate convergence is challenging because many natural algorithms, such as Simultaneous Gradient Descent/Ascent, provably diverge or cycle even in simple convex-concave min-max settings, and previous work on global last-iterate convergence rates has been limited to the bilinear and convex-strongly concave settings. In this work, we show that the HAMILTONIAN GRADIENT DESCENT (HGD) algorithm achieves linear convergence in a variety of more general settings, including convex-concave problems that satisfy a novel "sufficiently bilinear" condition. We also prove convergence rates for stochastic HGD and for some parameter settings of the Consensus Optimization algorithm of Mescheder et al. (2017).</p></abstract></article-meta></front><body><sec><title>INTRODUCTION</title><p>In this paper we consider methods to solve smooth unconstrained min-max optimization problems. In the most classical setting, a min-max objective has the form min x1 max x2 g(x 1 , x 2 ) where g : R d &#215; R d &#8594; R is a smooth objective function with two inputs. The usual goal in such problems is to find a saddle point, also known as a min-max solution, which is a pair (x * 1 , x * 2 ) &#8712; R d &#215; R d that satisfies g(x * 1 , x 2 ) &#8804; g(x * 1 , x * 2 ) &#8804; g(x 1 , x * 2 ) (1) for every x 1 &#8712; R d and x 2 &#8712; R d . Min-max problems have a long history, going back at least as far as <xref ref-type="bibr" rid="b26">Neumann (1928)</xref>, which formed the basis of much of modern game theory, and including a great deal of work in the 1950s when algorithms such as fictitious play were explored (Brown, 1951; <xref ref-type="bibr" rid="b29">Robinson, 1951</xref>).</p><p>The convex-concave setting, where we assume g is convex in x 1 and concave in x 2 , is a classic min-max problem that has a number of different applications, such as solving constrained convex optimization problems. While a variety of tools have been developed for this setting, a very popular approach within the machine learning community has been the use of so-called no-regret algorithms (<xref ref-type="bibr" rid="b6">Cesa-Bianchi &amp; Lugosi, 2006</xref>; <xref ref-type="bibr" rid="b2">Hazan, 2016</xref>). This trick, which was originally developed by <xref ref-type="bibr" rid="b13">Hannan (1957)</xref> and later emerged in the development of boosting (<xref ref-type="bibr" rid="b10">Freund &amp; Schapire, 1999</xref>), provides a simple computational method via repeated play: each of the inputs x 1 and x 2 are updated iteratively according to no-regret learning protocols, and one can prove that the average-iterates (x 1 ,x 2 ) converge to a min-max solution.</p><p>Recently, interest in min-max optimization has surged due to the enormous popularity of Generative Adversarial Networks (GANs), whose training involves solving a nonconvex min-max problem where x 1 and x 2 correspond to the parameters of two different neural nets (<xref ref-type="bibr" rid="b12">Goodfellow et al., 2014</xref>). The fundamentally nonconvex nature of this problem changes two things. First, it is infeasible to find a "global" solution of the min-max objective. Instead, a typical goal in GAN training is to find a local min-max, namely a pair (x * 1 , x * 2 ) that satisfies (1) for all (x 1 , x 2 ) in some neighborhood of (x * 1 , x * 2 ).</p></sec><sec><title>Under review as a conference paper at ICLR 2020</title><p>Second, iterate averaging lacks the theoretical guarantees present in the convex-concave setting. This has motivated research on last-iterate convergence guarantees, which are appealing because they more easily carry over from convex to nonconvex settings.</p><p>Last-iterate convergence guarantees for min-max problems have been challenging to prove since standard analysis of no-regret algorithms says essentially nothing about last-iterate convergence. Widely used no-regret algorithms, such as Simultaneous Gradient Descent/Ascent (SGDA), fail to converge even in the simple bilinear setting where g(x 1 , x 2 ) = x 1 Cx 2 for some arbitrary matrix C. SGDA provably cycles in continuous time and diverges in discrete time (see for example <xref ref-type="bibr" rid="b7">Daskalakis et al. (2018)</xref>; <xref ref-type="bibr" rid="b23">Mescheder et al. (2018)</xref>). In fact, the full range of Follow-The-Regularized- Leader (FTRL) algorithms provably do not converge in zero-sum games with interior equilibria (<xref ref-type="bibr" rid="b21">Mertikopoulos et al., 2018</xref>). This occurs because the iterates of the FTRL algorithms exhibit cyclic behavior, a phenomenon commonly observed when training GANs in practice as well.</p><p>Much of the recent research on last-iterate convergence in min-max problems has focused on asymptotic or local convergence (<xref ref-type="bibr" rid="b21">Mertikopoulos et al., 2019</xref>; <xref ref-type="bibr" rid="b23">Mescheder et al., 2017</xref>; <xref ref-type="bibr" rid="b7">Daskalakis &amp; Panageas, 2018</xref>; <xref ref-type="bibr" rid="b4">Balduzzi et al., 2018</xref>; <xref ref-type="bibr" rid="b17">Letcher et al., 2019</xref>; <xref ref-type="bibr" rid="b20">Mazumdar et al., 2019</xref>). While these results are certainly useful, one would ideally like to prove global non-asymptotic last-iterate convergence rates. Provable global convergence rates allow for quantitative comparison of different algorithms and can aid in choosing learning rates and architectures to ensure fast convergence in practice. Yet despite the extensive amount of literature on convergence rates for convex optimization, very few global last-iterate convergence rates have been proved for min-max problems. Existing work on global last-iterate convergence rates has been limited to the bilinear or convex-strongly concave settings (<xref ref-type="bibr" rid="b31">Tseng, 1995</xref>; <xref ref-type="bibr" rid="b18">Liang &amp; Stokes, 2019</xref>; <xref ref-type="bibr" rid="b9">Du &amp; Hu, 2019</xref>; Mokhtari et al., 2019). In particular, the following basic question is still open:</p><p>"What global last-iterate convergence rates are achievable for convex-concave min-max problems?"</p></sec><sec><title>Our Contribution</title><p>Understanding global last-iterate rates in the convex-concave setting is an important stepping stone towards provable last-iterate rates in the nonconvex-nonconcave setting. Motivated by this, we prove new linear last-iterate convergence rates in the convex-concave setting for an algorithm called HAMILTONIAN GRADIENT DESCENT (HGD) under weaker assumptions compared to previous results. HGD is gradient descent on the squared norm of the gradient, and it has been mentioned in <xref ref-type="bibr" rid="b23">Mescheder et al. (2017)</xref>; <xref ref-type="bibr" rid="b4">Balduzzi et al. (2018)</xref>. Our results are the first to show non-asymptotic convergence of an efficient algorithm in settings that not linear or strongly convex in either input. In particular, we introduce a novel "sufficiently bilinear" condition on the second-order derivatives of the objective g and show that this condition is sufficient for HGD to achieve linear convergence in convex-concave settings. The "sufficiently bilinear" condition appears to be a new sufficient condition for linear convergence rates that is distinct from previously known conditions such as the Polyak-&#321;ojasiewicz (PL) condition or pure bilinearity. Our analysis relies on showing that the squared norm of the gradient satisfies the PL condition in various settings. As a corollary of this result, we can leverage <xref ref-type="bibr" rid="b15">Karimi et al. (2016)</xref> to show that a stochastic version of HGD will have a last-iterate convergence rate of O(1/ &#8730; k) in the "sufficiently bilinear" setting. On the practical side, while vanilla HGD has issues training GANs in practice, <xref ref-type="bibr" rid="b23">Mescheder et al. (2017)</xref> show that a related algorithm known as Consensus Optimization (CO) can effectively train GANs in a variety of settings, including on CIFAR-10 and celebA. We show that CO can be viewed as a perturbation of HGD, which implies that for some parameter settings, CO converges at the same rate as HGD. We begin in Section 2 with background material and notation, including some of our key assump- tions. In Section 3, we discuss Hamiltonian Gradient Descent (HGD), and we present our linear convergence rates for HGD in various set- tings. In Section 4, we present some of the key technical components used to prove our results from Section 3. Finally, in Section 5, we present our results for Stochastic HGD and Consensus Optimization. The details of our proofs are in Appendix H.</p></sec><sec><title>BACKGROUND</title></sec><sec><title>PRELIMINARIES</title><p>In this section, we discuss some key definitions and notation. We will use ||&#183;|| to denote the Euclidean norm for vectors or the operator norm for matrices or tensors. For a symmetric matrix A, we will use &#955; min (A) and &#955; max (A) to denote the smallest and largest eigenvalues of A. For a general real matrix A, &#963; min (A) and &#963; max (A) denote the smallest and largest singular values of A.</p><p>Notation Since g is a function of x 1 &#8712; R d and x 2 &#8712; R d , we will often consider x 1 and x 2 to be components of one vector x = (x 1 , x 2 ). We will use superscripts to denote iterate indices. Following <xref ref-type="bibr" rid="b4">Balduzzi et al. (2018)</xref>, we use &#958; = (&#8711; x1 g, &#8722;&#8711; x2 g) to denote the signed vector of partial derivatives. Under this notation, the Simultaneous Gradient Descent/Ascent (SGDA) update can be written as x (k+1) = x (k) &#8722; &#951;&#958;(x (k) ).</p><p>We will use J to denote the Jacobian of &#958;, i.e. J &#8801; &#8711;&#958; = &#8711; 2 x1x1 g &#8711; 2 x1x2 g &#8722;&#8711; 2 x2x1 g &#8722;&#8711; 2 x2x2 g . Note that unlike the Hessian in standard optimization, J is not symmetric, due to the negative sign in &#958;. When clear from the context, we often omit dependence on x when writing &#958;, J, g, H, and other functions. Note that &#958;, J, and H are defined for a given objective g - we omit this dependence as well for notational clarity. We will always assume g is sufficiently differentiable whenever we take derivatives. In particular, we assume second-order differentiability in Section 3.</p><p>We will also use the following non-standard definition for notational convenience:</p></sec><sec><title>Notions of convergence in min-max problems</title><p>The convergence rates in this paper will apply to min-max problems where g satisfies the following assumption:</p><p>Assumption 2.6. All critical points of the objective g are global min-maxes (i.e. they satisfy (1)). In other words, we prove convergence rates to min-maxes in settings where convergence to criti- cal points is necessary and sufficient for convergence to min-maxes. This assumption is true for convex-concave settings, but also holds for some nonconvex-nonconcave settings, as we discuss in Ap- pendix E. This assumption allows us to measure the convergence of our algorithms to -approximate critical points, defined as follows:</p><p>Definition 2.7. Let &#8805; 0. A point x &#8712; R d &#215; R d is an -approximate critical point if ||&#958;(x)|| &#8804; .</p><p>Convergence to approximate critical points is a necessary condition for convergence to local or global minima, and it is a natural measure of convergence since the value of g at a given point gives no information about how close we are to a min-max. Our main convergence rate results focus on this first-order notion of convergence, which is sufficient given Assumption 2.6. We discuss notions of second-order convergence and ways to adapt our results to the general nonconvex setting in Appendix A.</p></sec><sec><title>RELATED WORK</title></sec><sec><title>Asymptotic and local convergence</title><p>Several recent papers have given asymptotic or local con- vergence results for min-max problems. <xref ref-type="bibr" rid="b21">Mertikopoulos et al. (2019)</xref> show that the extragradient (EG) algorithm converges asymptotically in a broad class of problems known as coherent saddle point problems, which include quasiconvex-quasiconcave problems. However, they do not prove convergence rates. For more general smooth nonconvex min-max problems, a number of different papers have given local stability or local asymptotic convergence results for various algorithms, which we discuss in Appendix A.</p><p>Non-asymptotic convergence rates Work on global non-asymptotic last-iterate convergence rates has been limited to very restrictive settings. A classic result by <xref ref-type="bibr" rid="b30">Rockafellar (1976)</xref> shows a linear convergence rate for the proximal point method in the bilinear and strongly convex-strongly concave cases. Another classic result, by Tseng (1995), shows a linear convergence rate for the extragradient algorithm in the bilinear case. <xref ref-type="bibr" rid="b18">Liang &amp; Stokes (2019)</xref> show that a number of algorithms achieve a linear convergence rate in the bilinear case, including Optimistic Mirror Descent (OMD) and Consensus Optimization (CO). They also show that SGDA obtains a linear convergence rate in the strongly convex-strongly concave case. <xref ref-type="bibr" rid="b25">Mokhtari et al. (2019)</xref> show that OMD and EG obtain a linear rate for the strongly convex-strongly concave case, in addition to proving similar results for generalized versions of both algorithms. Finally, <xref ref-type="bibr" rid="b9">Du &amp; Hu (2019)</xref> show that SGDA achieves a linear convergence rate for a convex-strongly concave setting with a full column rank linear interaction term. Non-uniform average-iterate convergence A number of recent works have studied the conver- gence of non-uniform averages of iterates, which can be viewed as an interpolation between the standard uniform average-iterate and last-iterate. We discuss these works further in Appendix B.</p></sec><sec><title>HAMILTONIAN GRADIENT DESCENT</title><p>Our main algorithm for finding saddle points of g(x 1 , x 2 ) is called HAMILTONIAN GRADIENT DESCENT (HGD). HGD consists of performing gradient descent on a particular objective function H that we refer to as the Hamiltonian, following the terminology of <xref ref-type="bibr" rid="b4">Balduzzi et al. (2018)</xref>. 2 If we let &#958; := &#8706;g &#8706;x1 , &#8722; &#8706;g &#8706;x2 be the vector of (appropriately-signed) partial derivatives, then the Hamiltonian is:</p><p>Since a critical point occurs when &#958;(x) = 0, we can find a (approximate) critical point by finding a (approximate) minimizer of H. Moreover, under Assumption 2.6, finding a critical point is equivalent to finding a saddle point. This motivates the HGD update procedure on x (k) = (x (k) 1 , x (k) 2 ) with step-size &#951; &gt; 0:</p><p>HGD has been mentioned in <xref ref-type="bibr" rid="b23">Mescheder et al. (2017)</xref>; <xref ref-type="bibr" rid="b4">Balduzzi et al. (2018)</xref>, and it strongly resembles the Consensus Optimization (CO) approach of <xref ref-type="bibr" rid="b23">Mescheder et al. (2017)</xref>. The HGD update requires a Hessian-vector product because &#8711;H = &#958; J, making HGD a second-order iterative scheme. However, Hessian-vector products are cheap to compute when the objective is defined by a neural net, taking only two gradient oracle calls (Pearlmutter, 1994). This makes the Hessian-vector product oracle a theoretically appealing primitive, and it has been used widely in the nonconvex optimization literature. To the best of our knowledge, previous work on last-iterate convergence rates has only focused on how algorithms perform in three particular cases: (a) when the objective g is bilinear, (b) when g is strongly convex-strongly concave, and (c) when g is convex-strongly concave (<xref ref-type="bibr" rid="b31">Tseng, 1995</xref>; <xref ref-type="bibr" rid="b18">Liang &amp; Stokes, 2019</xref>; <xref ref-type="bibr" rid="b9">Du &amp; Hu, 2019</xref>; Mokhtari et al., 2019). The existence of methods with provable finite-time guarantees for settings beyond the aforementioned has remained an open problem. This work is the first to show that an efficient algorithm, namely HGD, can achieve non-asymptotic convergence in settings that are not strongly convex or linear in either player.</p></sec><sec><title>CONVERGENCE RATES FOR HGD</title><p>We now state our main theorems for this paper, which show convergence to critical points. When Assumption 2.6 holds, we get convergence to min-maxes. All of our main results will use the following multi-part assumption:</p><p>Assumption 3.1. Let g : R d &#215; R d &#8594; R.</p><p>1. Assume a critical point for g exists.</p><p>2. Assume g is (L 1 , L 2 , L 3 )-Lipschitz and let L H = L 1 L 3 + L 2 2 .</p><p>Our first theorem shows that HGD converges for the strongly convex-strongly concave case. Although simple, this result will help us demonstrate our analysis techniques. Theorem 3.2. Let Assumption 3.1 hold and let g(x 1 , x 2 ) be &#945;-strongly convex in x 1 and &#945;-strongly concave in x 2 . Then HGD with step-size &#951; = 1/L H starting from some x (0) &#8712; R d &#215; R d will have the following convergence rate:</p><p>Next, we show that HGD converges when g is linear in one of its arguments and the cross-derivative is full rank. This setting allows a slightly tighter analysis compared to Theorem 3.4. Theorem 3.3. Let Assumption 3.1 hold and let g(x 1 , x 2 ) be L-smooth in x 1 and linear in x 2 , and assume the cross derivative &#8711; 2 x1,x2 g is full rank with all singular values at least &#947; &gt; 0 for all x &#8712; R d &#215; R d . Then HGD with step-size &#951; = 1/L H starting from some x (0) &#8712; R d &#215; R d will have the following convergence rate:</p><p>Finally, we show our main result, which requires smoothness in both players and a large, well- conditioned cross-derivative. Theorem 3.4. Let Assumption 3.1 hold and let g be L-smooth in x 1 and L-smooth in x 2 . Let &#181; 2 = min x1,x2 &#955; min ((&#8711; 2 x2x2 g(x 1 , x 2 )) 2 ) and &#961; 2 = min x1,x2 &#955; min ((&#8711; 2 x1x1 g(x 1 , x 2 )) 2 ), and assume the cross derivative &#8711; 2 x1x2 g is full rank with all singular values lower bounded by &#947; &gt; 0 and upper bounded by &#915; for all x &#8712; R d &#215; R d . Moreover, let the following "sufficiently bilinear" condition hold:</p><p>Then HGD with step-size &#951; = 1/L H starting from some x (0) &#8712; R d &#215; R d will satisfy</p><p>As discussed above, Theorem 3.4 provides the first last-iterate convergence rate for min-max problems that does not require strong convexity or linearity in either input. For example, the objective g(x 1 , x 2 ) = f (x 1 ) + 3Lx 1 x 2 &#8722; h(x 2 ), where f and h are L-smooth convex functions, satisfies the assumptions of Theorem 3.4 and is not strongly convex or linear in either input. We discuss a simple example that is not convex-concave in Appendix E. We also show how our results can be applied to specific settings, such as the Dirac-GAN, in Appendix G.</p><p>The "sufficiently bilinear" condition (3) is in some sense necessary for our linear convergence rate since linear convergence is impossible in general for convex-concave settings, due to lower bounds on convex optimization (<xref ref-type="bibr" rid="b2">Agarwal &amp; Hazan, 2018</xref>; Arjevani et al., 2017). We give some explanations for this condition in the following section. In simple experiments for HGD on convex-concave and nonconvex-nonconcave objectives, the convergence rate speeds up when there is a larger bilinear component, as expected from our theoretical results. We show these experiments in Appendix K.</p></sec><sec><title>EXPLANATION OF "SUFFICIENTLY BILINEAR" CONDITION</title><p>In this section, we explain the "sufficiently bilinear" condition (3). Suppose our objective is g(x 1 , x 2 ) =&#285;(x 1 , x 2 ) + cx 1 x 2 for a smooth function&#285;. Then for sufficiently large values of c (i.e. g has a large enough bilinear term), we see that g satisfies (3). To see this, note that if we have &#947; 4 &gt; 4L 2 &#915; 2 , then condition (3) holds. Let &#947; and &#915; be lower and upper bounds on the singular values of &#8711; 2 x1x2&#285; . Then it suffices to have (&#947; + c) 4 &gt; 4L 2 (&#915; + c) 2 , which is true for c = 3 max{L, &#915; } (i.e. c = O(L) suffices).</p><p>This condition is analogous to the case when we use SGDA on the objective g(x 1 , x 2 ) =&#285;(x 1 , x 2 ) + c ||x 1 || 2 &#8722; c ||x 2 || 2 for L-smooth convex-concave&#285;. According to <xref ref-type="bibr" rid="b18">Liang &amp; Stokes (2019)</xref>, SGDA will converge at a rate of roughlyL 2 c 2 log(1/ ) forL-smooth and c-strongly convex-strongly concave objectives. 3 For c = 0, SGDA will diverge in the worst case. For c = o(L), we get linear convergence, but it will be slow because L+c c is large (this can be thought of as a large condition number). Finally, for c = &#8486;(L), we get fast linear convergence, since L+c c = O(1). Thus, to get fast linear convergence it suffices to make the problem "sufficiently strongly convex-strongly concave" (or "sufficiently strongly monotone").</p><p>Theorem 3.4 and condition (3) show that there exists another class of settings where we can achieve linear rates in the min-max setting. In our case, if we have an objective g(x 1 , x 2 ) =&#285;(x 1 , x 2 )+cx 1 x 2 for a smooth function&#285;, we will get linear convergence if &#8711; 2 x1x2&#285; &#8804; &#948;L and c &#8805; 3(1 + &#948;)L, which ensures that the problem is "sufficiently bilinear." Intuitively, it makes sense that the "sufficiently bilinear" setting allows a linear rate because the pure bilinear setting allows a linear rate. Another way to understand condition (3) is that it is a sufficient condition for the existence of a unique critical point in a general class of settings, as we show in the following lemma, which we prove in Appendix F. Lemma 3.5. Let g(x 1 , x 2 ) = f (x 1 ) + cx 1 x 2 &#8722; h(x 2 ) where f and h are L-smooth. Moreover, assume that &#8711; 2 f (x 1 ) and &#8711; 2 h(x 2 ) each have a 0 eigenvalue for some x 1 and x 2 . If (3) holds, then g has a unique critical point.</p></sec><sec><title>PROOF SKETCHES FOR HGD CONVERGENCE RATE RESULTS</title><p>In this section, we go over the key components of the proofs for our convergence rates from Section 3.1. Recall that the intuition behind HGD was that critical points (where &#958;(x) = 0) are global minima of H = 1 2 ||&#958;|| 2 . On the other hand, there is no guarantee that H is a convex potential function, and a priori, one would not assume gradient descent on this potential would find a critical point. Nonetheless, we are able to show that in a variety of settings, H satisfies the PL condition, which allows HGD to have linear convergence. Proving this requires proving properties about the singular values of J &#8801; &#8711;&#958;.</p></sec><sec><title>THE POLYAK-&#321;OJASIEWICZ CONDITION FOR THE HAMILTONIAN</title><p>We begin by recalling the definition of the PL condition. Definition 4.1 (Polyak-&#321;ojasiewicz (PL) condition <xref ref-type="bibr" rid="b15">Polyak (1963)</xref>; <xref ref-type="bibr" rid="b19">Lojasiewicz (1963)</xref>). A function</p><p>The PL condition is well-known to be the weakest condition necessary to obtain linear convergence rate for gradient methods; see for example <xref ref-type="bibr" rid="b15">Karimi et al. (2016)</xref>. We will show that H satisfies the PL condition, which allows us to use the following classic theorem.</p><p>For completeness, we provide the proof of Theorem 4.2 in Appendix C.</p><p>All of our results use Assumption 3.1, so we are guaranteed that g has a critical point. This implies that the global minimum of H is 0, which allows us to prove the following key lemma: Lemma 4.3. Assume we have a twice differentiable g(x 1 , x 2 ) with associated &#958;, H, J. Let c &gt; 0. If JJ &#945;I for every x, then H satisfies the PL condition with parameter &#945;.</p><p>Proof. Consider the squared norm of the gradient of the Hamiltonian:</p><p>The proof is finished by noting that H(x) = 0 when x is a critical point.</p><p>To use Theorem 4.2, we will also need to show that H is smooth, which holds when g is (L 1 , L 2 , L 3 )- Lipschitz. The proof of Lemma 4.4 is in Appendix H.</p><p>Lemma 4.4. Consider any g(x 1 , x 2 ) which is (L 1 , L 2 , L 3 )-Lipschitz for constants L 1 , L 2 , L 3 &gt; 0. Then the Hamiltonian H(x) is (L 1 L 3 + L 2 2 )-smooth.</p><p>To use Lemma 4.3, we will need control over the eigenvalues of JJ , which we achieve with the following linear algebraic lemmas. We provide their proofs in Appendix H. We now proceed to sketch the proofs of our main theorems using the techniques we have described. The following lemma shows it suffices to prove the PL condition for H for the various settings of our theorems:</p><p>Lemma 4.7. Given g : R d &#215; R d &#8594; R, suppose H satisfies the PL condition with parameter &#945; and is L H -smooth. Then if we use HGD starting from some x (0) &#8712; R d &#215; R d with step-size &#951; = 1/L H , then we have the following:</p><p>Proof. Since H satisfies the PL condition with parameter &#945; and H is L H -smooth, we know by Theorem 4.2 that gradient descent on H with step-size 1/L H converges at a rate of H(x (k) ) &#8804; (1 &#8722; &#945; L H ) k H(x (0) ). Substituting in for H gives the lemma.</p><p>It remains to show that H satisfies the PL condition in the settings of Theorems 3.2 to 3.4. First, we show the result for the strongly convex-strongly concave setting of Theorem 3.2. Lemma 4.8 (PL for the strongly convex-strongly concave setting). Let g be c-strongly convex in x 1 and c-strongly concave in x 2 . Then H satisfies the PL condition with parameter &#945; = c 2 .</p></sec><sec><title>Proof</title><p>We apply Lemma 4.5 with H = J. Since g is c-strongly-convex in x 1 and c-strongly concave in x 2 we have M 1 = &#8711; 2 x1x1 g cI and M 2 = &#8722;&#8711; 2 x2x2 g cI. Then the magnitude of the eigenvalues of J is at least c. Thus, JJ c 2 I, so by Lemma 4.3, H satisfies the PL condition with parameter c 2 .</p><p>Next, we show that H satisfies the PL condition for the nonconvex-linear setting of Theorem 3.3. We prove this lemma in Appendix H.4 by using Lemma 4.6.</p><p>Under review as a conference paper at ICLR 2020 Lemma 4.9 (PL for the smooth nonconvex-linear setting). Let g be L-smooth in x 1 and lin- ear in x 2 . Moreover, for all x &#8712; R d &#215; R d , let &#8711; 2 x1x2 g(x 1 , x 2 ) be full rank and square with &#963; min (&#8711; 2 x1x2 g(x 1 , x 2 )) &#8805; &#947;. Then H satisfies the PL condition with parameter &#945; = &#947; 4 2&#947; 2 +L 2 .</p><p>Finally, we prove that H satisfies the PL condition in the nonconvex-nonconvex setting of Theorem 3.4. The proof for Lemma 4.10 is in Appendix H.5, and it uses Lemma H.2, which is similar to Lemma 4.6. Lemma 4.10 (PL for the smooth nonconvex-nonconvex setting). Let g be L-smooth in x 1 and L-smooth in x 2 . Also, let &#8711; 2 x1x2 g be full rank and let all of its singular values be lower bounded by &#947; and upper bounded by &#915; for all x &#8712; R d &#215; R d . Let &#961; 2 = min x1,x2 &#955; min ((&#8711; 2 x1x1 g(x 1 , x 2 )) 2 ) and &#181; 2 = min x1,x2 &#955; min ((&#8711; 2 x2x2 g(x 1 , x 2 )) 2 ). Assume the following condition holds:</p><p>Then H satisfies the PL condition with parameter</p><p>Combining Lemmas 4.8 to 4.10 with Lemma 4.7 yields Theorems 3.2 to 3.4.</p></sec><sec><title>EXTENSIONS OF HGD RESULTS</title></sec><sec><title>Stochastic HGD</title><p>Our results above also imply rates for stochastic HGD, where the gradient &#8711;H in (2), is replaced by a stochastic estimator v of &#8711;H such that E[v] = &#8711;H. Since we show that H satisfies the PL condition with parameter &#945; in different settings, we can use Theorem 4 in <xref ref-type="bibr" rid="b15">Karimi et al. (2016)</xref> to show that stochastic HGD converges at a O(1/ &#8730; k) rate in the settings of Theorems 3.2 to 3.4, including the "sufficiently bilinear" setting. We prove Theorem 5.1 in Appendix I. Theorem 5.1. Let Assumption 3.1 hold and suppose H satisfies the PL condition with parameter &#945;. Suppose we use the update x (k+1) = x (k) &#8722; &#951; k v(x (k) ), where v is a stochastic estimate of &#8711;H such that E[v] = &#8711;H and E[ v(x (k) ) 2 ] &#8804; C 2 for all x (k) . Then if we use &#951; k = 2k+1 2&#945;(k+1) 2 , we have the following convergence rate:</p></sec><sec><title>Consensus Optimization</title><p>The Consensus Optimization (CO) algorithm of <xref ref-type="bibr" rid="b23">Mescheder et al. (2017)</xref> is as follows: x (k+1) = x (k) &#8722; &#951;(&#958;(x (k) ) + &#947;&#8711;H(x (k) )) (5) where &#947; &gt; 0. This is essentially a weighted combination of SGDA and HGD. <xref ref-type="bibr" rid="b23">Mescheder et al. (2017)</xref> remark that while HGD has poor performance on nonconvex problems in practice, CO can effectively train GANs in a variety of settings, including on CIFAR-10 and celebA. While they frame CO as SGDA with a small modification, they actually set &#947; = 10 for several of their experiments, which suggests that one can also view CO as a modified form of HGD.</p><p>Using this perspective, we prove Theorem 5.2, which implies that we get linear convergence of CO in the same settings as Theorems 3.2 to 3.4 provided that &#947; is sufficiently large (i.e. the HGD update is large compared to the SGDA update). The key technical component is showing that HGD still performs well even with a certain kind of small arbitrary perturbation. Previously, <xref ref-type="bibr" rid="b18">Liang &amp; Stokes (2019)</xref> proved that CO achieves linear convergence in the bilinear setting, so our result greatly expands the settings where CO has provable non-asymptotic convergence. We prove Theorem 5.2 in Appendix J.</p><p>Theorem 5.2. Let Assumption 3.1 hold. Let g be L g smooth and suppose H satisfies the PL condition with parameter &#945;. Then if we update some x (0) &#8712; R d &#215; R d using the CO update (5) with step-size &#951; = &#945; 4L H Lg and &#947; = 4Lg &#945; , we get the following convergence:</p><p>We also show that CO converges in practice on some simple examples in Appendix K. Under review as a conference paper at ICLR 2020</p></sec><sec id="figures"><title>Figures</title><fig id="fig_0"><object-id>fig_0</object-id><label>Figure 1:</label><caption><title>Figure 1:</title><p>HGD converges quickly, while SGDA spirals. This nonconvex-nonconcave objective is in defined in Appendix K.</p></caption><graphic /><graphic /></fig></sec></body><back><ref-list id="ref-list-1"><ref id="b0"><element-citation publication-type="journal"><article-title>Faster rates for convex-concave games</article-title><source>Conference on Learning Theory (COLT)</source><year>2018</year><person-group person-group-type="author"><name><surname>References</surname><given-names>Jacob</given-names></name><name><surname>Abernethy</surname><given-names>Kevin A</given-names></name><name><surname>Lai</surname><given-names /></name><name><surname>Kfir</surname><given-names>Y</given-names></name><name><surname>Levy</surname><given-names>Jun-Kun</given-names></name><name><surname>Wang</surname><given-names /></name></person-group></element-citation></ref><ref id="b1"><element-citation publication-type="journal"><article-title>Local saddle point optimization: A curvature exploitation approach</article-title><source>Artificial Intelligence and Statistics (AISTATS)</source><year>2019</year><person-group person-group-type="author"><name><surname>Adolphs</surname><given-names>Leonard</given-names></name><name><surname>Daneshmand</surname><given-names>Hadi</given-names></name><name><surname>Lucchi</surname><given-names>Aurelien</given-names></name><name><surname>Hofmann</surname><given-names>Thomas</given-names></name></person-group></element-citation></ref><ref id="b2"><element-citation publication-type="journal"><article-title>Lower bounds for higher-order convex optimization</article-title><source>Conference on Learning Theory (COLT)</source><year>2018</year><person-group person-group-type="author"><name><surname>Agarwal</surname><given-names>Naman</given-names></name><name><surname>Hazan</surname><given-names>Elad</given-names></name></person-group></element-citation></ref><ref id="b3"><element-citation publication-type="journal"><article-title>Oracle complexity of second-order methods for smooth convex optimization</article-title><source>Mathematical Programming</source><year>2017</year><fpage>1</fpage><lpage>34</lpage><person-group person-group-type="author"><name><surname>Arjevani</surname><given-names>Yossi</given-names></name><name><surname>Shamir</surname><given-names>Ohad</given-names></name><name><surname>Shiff</surname><given-names>Ron</given-names></name></person-group></element-citation></ref><ref id="b4"><element-citation publication-type="journal"><article-title>The mechanics of n-player differentiable games</article-title><source>International Conference on Machine Learning (ICML)</source><year>2018</year><person-group person-group-type="author"><name><surname>Balduzzi</surname><given-names>David</given-names></name><name><surname>Racaniere</surname><given-names>Sebastien</given-names></name><name><surname>Martens</surname><given-names>James</given-names></name><name><surname>Foerster</surname><given-names>Jakob</given-names></name><name><surname>Tuyls</surname><given-names>Karl</given-names></name><name><surname>Graepel</surname><given-names>Thore</given-names></name></person-group></element-citation></ref><ref id="b5"><element-citation publication-type="journal"><article-title>Iterative solution of games by fictitious play</article-title><source>Activity analysis of production and allocation</source><year>1951</year><volume>13</volume><issue>1</issue><fpage>374</fpage><lpage>376</lpage><person-group person-group-type="author"><name><surname>George W Brown</surname><given-names /></name></person-group></element-citation></ref><ref id="b6"><element-citation publication-type="journal"><source>Prediction, learning, and games</source><year>2006</year><person-group person-group-type="author"><name><surname>Cesa</surname><given-names>Nicolo</given-names></name><name><surname>Bianchi</surname><given-names>-</given-names></name><name><surname>Lugosi</surname><given-names>G&#225;bor</given-names></name></person-group></element-citation></ref><ref id="b7"><element-citation publication-type="journal"><article-title>The limit points of (optimistic) gradient descent in min-max optimization</article-title><source>Advances in Neural Information Processing Systems (NeurIPS)</source><year>2018</year><fpage>9255</fpage><lpage>9265</lpage><person-group person-group-type="author"><name><surname>Daskalakis</surname><given-names>Constantinos</given-names></name><name><surname>Panageas</surname><given-names>Ioannis</given-names></name></person-group></element-citation></ref><ref id="b8"><element-citation publication-type="journal"><article-title>Training gans with optimism</article-title><source>International Conference on Learning Representations (ICLR)</source><year>2018</year><person-group person-group-type="author"><name><surname>Daskalakis</surname><given-names>Constantinos</given-names></name><name><surname>Ilyas</surname><given-names>Andrew</given-names></name><name><surname>Syrgkanis</surname><given-names>Vasilis</given-names></name><name><surname>Zeng</surname><given-names>Haoyang</given-names></name></person-group></element-citation></ref><ref id="b9"><element-citation publication-type="journal"><article-title>Linear convergence of the primal-dual gradient method for convex-concave saddle point problems without strong convexity</article-title><source>Artificial Intelligence and Statistics (AISTATS)</source><year>2019</year><person-group person-group-type="author"><name><surname>Simon</surname><given-names>S</given-names></name><name><surname>Du</surname><given-names>Wei</given-names></name><name><surname>Hu</surname><given-names /></name></person-group></element-citation></ref><ref id="b10"><element-citation publication-type="journal"><article-title>Adaptive Game Playing Using Multiplicative Weights</article-title><source>Games and Economic Behavior</source><year>1999</year><volume>29</volume><issue>1-2</issue><fpage>79</fpage><lpage>103</lpage><person-group person-group-type="author"><name><surname>Freund</surname><given-names>Yoav</given-names></name><name><surname>Schapire</surname><given-names>Robert E</given-names></name></person-group></element-citation></ref><ref id="b11"><element-citation publication-type="journal"><article-title>A variational inequality perspective on generative adversarial nets</article-title><source>International Conference on Learning Representations (ICLR)</source><year>2019</year><person-group person-group-type="author"><name><surname>Gidel</surname><given-names>Gauthier</given-names></name><name><surname>Berard</surname><given-names>Hugo</given-names></name><name><surname>Vincent</surname><given-names>Pascal</given-names></name><name><surname>Lacoste-Julien</surname><given-names>Simon</given-names></name></person-group></element-citation></ref><ref id="b12"><element-citation publication-type="journal"><article-title>Generative adversarial nets</article-title><source>Advances in Neural Information Processing Systems (NeurIPS)</source><year>2014</year><fpage>2672</fpage><lpage>2680</lpage><person-group person-group-type="author"><name><surname>Goodfellow</surname><given-names>Ian</given-names></name><name><surname>Pouget-Abadie</surname><given-names>Jean</given-names></name><name><surname>Mirza</surname><given-names>Mehdi</given-names></name><name><surname>Xu</surname><given-names>Bing</given-names></name><name><surname>Warde-Farley</surname><given-names>David</given-names></name><name><surname>Ozair</surname><given-names>Sherjil</given-names></name><name><surname>Courville</surname><given-names>Aaron</given-names></name><name><surname>Bengio</surname><given-names>Yoshua</given-names></name></person-group></element-citation></ref><ref id="b13"><element-citation publication-type="journal"><article-title>Approximation to bayes risk in repeated play</article-title><source>Contributions to the Theory of Games</source><year>1957</year><volume>3</volume><fpage>97</fpage><lpage>139</lpage><person-group person-group-type="author"><name><surname>Hannan</surname><given-names>James</given-names></name></person-group></element-citation></ref><ref id="b14"><element-citation publication-type="journal"><article-title>Introduction to online convex optimization</article-title><source>Foundations and Trends R in Optimization</source><year>2016</year><volume>2</volume><issue>3-4</issue><fpage>157</fpage><lpage>325</lpage><person-group person-group-type="author"><name><surname>Hazan</surname><given-names>Elad</given-names></name></person-group></element-citation></ref><ref id="b15"><element-citation publication-type="journal"><source>Joint European Conference on Machine Learning and Knowledge Discovery in Databases</source><year>2016</year><fpage>795</fpage><lpage>811</lpage><person-group person-group-type="author"><name><surname>Karimi</surname><given-names>Hamed</given-names></name><name><surname>Nutini</surname><given-names>Julie</given-names></name><name><surname>Schmidt</surname><given-names>Mark</given-names></name></person-group></element-citation></ref><ref id="b16"><element-citation publication-type="journal"><article-title>Progressive growing of gans for improved quality, stability, and variation</article-title><source>International Conference on Learning Representations (ICLR)</source><year>2018</year><person-group person-group-type="author"><name><surname>Karras</surname><given-names>Tero</given-names></name><name><surname>Aila</surname><given-names>Timo</given-names></name><name><surname>Laine</surname><given-names>Samuli</given-names></name><name><surname>Lehtinen</surname><given-names>Jaakko</given-names></name></person-group></element-citation></ref><ref id="b17"><element-citation publication-type="journal"><article-title>First-order methods with increasing iterate averaging for solving saddle-point problems</article-title><source>Stable op- ponent shaping in differentiable games</source><year>2019</year><person-group person-group-type="author"><name><surname>Kroer</surname><given-names>Christian</given-names></name><name><surname>Letcher</surname><given-names>Alistair</given-names></name><name><surname>Foerster</surname><given-names>Jakob</given-names></name><name><surname>Balduzzi</surname><given-names>David</given-names></name><name><surname>Rockt&#228;schel</surname><given-names>Tim</given-names></name></person-group></element-citation></ref><ref id="b18"><element-citation publication-type="journal"><article-title>Interaction matters: A note on non-asymptotic local convergence of generative adversarial networks</article-title><source>Artificial Intelligence and Statistics (AISTATS)</source><year>2019</year><person-group person-group-type="author"><name><surname>Liang</surname><given-names>Tengyuan</given-names></name><name><surname>Stokes</surname><given-names>James</given-names></name></person-group></element-citation></ref><ref id="b19"><element-citation publication-type="journal"><article-title>A topological property of real analytic subsets (in french)</article-title><source>Coll. du CNRS, Les &#233;quations aux d&#233;riv&#233;es partielles</source><year>1963</year><fpage>87</fpage><lpage>89</lpage><person-group person-group-type="author"><name><surname>Lojasiewicz</surname><given-names /></name></person-group></element-citation></ref><ref id="b20"><element-citation publication-type="journal"><article-title>On finding local nash equilibria (and only local nash equilibria) in zero-sum games</article-title><source>arXiv preprint arXiv:1901.00838</source><year>2019</year><person-group person-group-type="author"><name><surname>Eric</surname><given-names>V</given-names></name><name><surname>Mazumdar</surname><given-names>Michael I</given-names></name><name><surname>Jordan</surname><given-names>S Shankar</given-names></name><name><surname>Sastry</surname><given-names /></name></person-group></element-citation></ref><ref id="b21"><element-citation publication-type="journal"><source>Proceedings of the Twenty-Ninth Annual ACM-SIAM Symposium on Discrete Algorithms (SODA)</source><year>2018</year><fpage>2703</fpage><lpage>2717</lpage></element-citation></ref><ref id="b22"><element-citation publication-type="journal"><article-title>Optimistic mirror descent in saddle-point problems: Going the extra(- gradient) mile</article-title><source>International Conference on Learning Representations (ICLR)</source><year>2019</year><person-group person-group-type="author"><name><surname>Mertikopoulos</surname><given-names>Panayotis</given-names></name><name><surname>Lecouat</surname><given-names>Bruno</given-names></name><name><surname>Zenati</surname><given-names>Houssam</given-names></name><name><surname>Foo</surname><given-names>Chuan-Sheng</given-names></name><name><surname>Chandrasekhar</surname><given-names>Vijay</given-names></name><name><surname>Piliouras</surname><given-names>Georgios</given-names></name></person-group></element-citation></ref><ref id="b23"><element-citation publication-type="journal"><article-title>The numerics of GANs</article-title><source>Advances in Neural Information Processing Systems (NeurIPS)</source><year>2017</year><fpage>1825</fpage><lpage>1835</lpage><person-group person-group-type="author"><name><surname>Mescheder</surname><given-names>Lars</given-names></name><name><surname>Nowozin</surname><given-names>Sebastian</given-names></name><name><surname>Geiger</surname><given-names>Andreas</given-names></name></person-group></element-citation></ref><ref id="b24"><element-citation publication-type="journal"><article-title>Which training methods for gans do actually converge?</article-title><source>International Conference on Machine Learning (ICML)</source><year>2018</year><fpage>3478</fpage><lpage>3487</lpage><person-group person-group-type="author"><name><surname>Mescheder</surname><given-names>Lars</given-names></name><name><surname>Geiger</surname><given-names>Andreas</given-names></name><name><surname>Nowozin</surname><given-names>Sebastian</given-names></name></person-group></element-citation></ref><ref id="b25"><element-citation publication-type="journal"><article-title>A unified analysis of extra-gradient and optimistic gradient methods for saddle point problems: Proximal point approach</article-title><source>arXiv preprint arXiv:1901.08511</source><year>2019</year><person-group person-group-type="author"><name><surname>Mokhtari</surname><given-names>Aryan</given-names></name><name><surname>Ozdaglar</surname><given-names>Asuman</given-names></name><name><surname>Pattathil</surname><given-names>Sarath</given-names></name></person-group></element-citation></ref><ref id="b26"><element-citation publication-type="journal"><article-title>Zur theorie der gesellschaftsspiele</article-title><source>Mathematische annalen</source><year>1928</year><volume>100</volume><issue>1</issue><fpage>295</fpage><lpage>320</lpage><person-group person-group-type="author"><name><surname>J V Neumann</surname><given-names /></name></person-group></element-citation></ref><ref id="b27"><element-citation publication-type="journal"><article-title>Fast exact multiplication by the hessian</article-title><source>Neural computation</source><year>1994</year><volume>6</volume><issue>1</issue><fpage>147</fpage><lpage>160</lpage><person-group person-group-type="author"><name><surname>Barak</surname><given-names>A</given-names></name><name><surname>Pearlmutter</surname><given-names /></name></person-group></element-citation></ref><ref id="b28"><element-citation publication-type="journal"><article-title>Gradient methods for minimizing functionals (in russian)</article-title><source>Zh. Vychisl. Mat. Mat. Fiz.</source><year>1963</year><fpage>643</fpage><lpage>653</lpage><person-group person-group-type="author"><name><surname>Polyak</surname><given-names>B T</given-names></name></person-group></element-citation></ref><ref id="b29"><element-citation publication-type="journal"><article-title>An iterative method of solving a game</article-title><source>Annals of mathematics</source><year>1951</year><fpage>296</fpage><lpage>301</lpage><person-group person-group-type="author"><name><surname>Robinson</surname><given-names>Julia</given-names></name></person-group></element-citation></ref><ref id="b30"><element-citation publication-type="journal"><article-title>Monotone operators and the proximal point algorithm</article-title><source>SIAM journal on control and optimization</source><year>1976</year><volume>14</volume><issue>5</issue><fpage>877</fpage><lpage>898</lpage><person-group person-group-type="author"><name><surname>Tyrrell Rockafellar</surname><given-names>R</given-names></name></person-group></element-citation></ref><ref id="b31"><element-citation publication-type="journal"><article-title>On linear convergence of iterative methods for the variational inequality problem</article-title><source>Journal of Computational and Applied Mathematics</source><year>1995</year><volume>60</volume><issue>1-2</issue><fpage>237</fpage><lpage>252</lpage><person-group person-group-type="author"><name><surname>Tseng</surname><given-names>Paul</given-names></name></person-group></element-citation></ref><ref id="b32"><element-citation publication-type="journal"><article-title>The unusual effectiveness of averaging in gan training</article-title><source>International Conference on Learning Representations (ICLR)</source><year>2019</year><person-group person-group-type="author"><name><surname>Yaz&#305;c&#305;</surname><given-names>Yasin</given-names></name><name><surname>Foo</surname><given-names>Chuan-Sheng</given-names></name><name><surname>Winkler</surname><given-names>Stefan</given-names></name><name><surname>Yap</surname><given-names>Kim-Hui</given-names></name><name><surname>Piliouras</surname><given-names>Georgios</given-names></name><name><surname>Chandrasekhar</surname><given-names>Vijay</given-names></name></person-group></element-citation></ref></ref-list></back></article>